# A linked list (LL) node 
# to store a queue entry 
'''class Node: 
      
    def __init__(self, data): 
        self.data = data 
        self.next = None'''
class Node: 
      
    def __init__(self, data): 
        self.data = data 
        self.next = None

class MyQueue:
    
    def __init__(self):
        self.tail = None
        self.head = None
    #Function to push an element into the queue.
    
        
        
    def push(self, item): 
        
        node_temp = Node(item)
        
        if self.head==None:
            self.head = node_temp
            self.tail = node_temp
        else:
            self.tail.next=node_temp
            self.tail=node_temp
    
        return self.tail , self.head
            
    #Function to pop front element from the queue.
    def pop(self):
         
        #add code here
        temp1=self.head
        
        if temp1!=None:
            temp2=self.head.next
            self.head.next=None
            self.head=temp2
        
            return temp1.data
        
        return -1 
        # return head





#{ 
#  Driver Code Starts



if __name__=='__main__':
    t=int(input())
    for i in range(t):
        s=MyQueue()
        q=int(input())
        q1=list(map(int,input().split()))
        i=0
        while(i<len(q1)):
            if(q1[i]==1):
                s.push(q1[i+1])
                i=i+2
            elif(q1[i]==2):
                print(s.pop(),end=" ")
                i=i+1
            elif(s.isEmpty()):
                print(-1)
                i=i+1
        print()   
# } Driver Code Ends